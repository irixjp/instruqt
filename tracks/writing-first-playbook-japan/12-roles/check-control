#!/bin/bash

ansible_files_dir="/home/rhel/ansible-files"
roles_dir="${ansible_files_dir}/roles"

errors=()

# Compare YAML files using Python
compare_yaml() {
    local yaml_file="$1"
    local content="$2"
    export YAML_FILE="$yaml_file"
    export EXPECTED_YAML="$content"
    python3 -c "import sys, os, yaml; sys.exit(0 if yaml.safe_load(open(os.environ['YAML_FILE'])) == yaml.safe_load(os.environ['EXPECTED_YAML']) else 1)"
    return $?
}

# Compare content without considering extra spaces
check_file_and_content_with_regex() {
    local file="$1"
    local content="$2"
    if [ -f "$file" ]; then
        local file_content
        file_content=$(cat "$file" | tr -d '[:space:]')
        local content_no_space
        content_no_space=$(echo "$content" | tr -d '[:space:]')
        if [ "$file_content" == "$content_no_space" ]; then
            echo "$file exists and has the correct content."
        else
            errors+=("$file has incorrect content. Ensure to copy paste from the example.")
        fi
    else
        errors+=("$file does not exist.")
    fi
}

# Verify roles directory exists
if [ -d "$roles_dir" ]; then
    echo "Roles directory exists."
else
    errors+=("Error: Roles directory does not exist.")
fi

# Directory structure check
apache_vhost_dir="${roles_dir}/apache_vhost"
dirs=("defaults" "files" "handlers" "meta" "tasks" "templates" "tests" "vars")
for dir in "${dirs[@]}"; do
    if [ ! -d "${apache_vhost_dir}/${dir}" ]; then
        errors+=("Error: Run the ansible-galaxy command to setup the roles dir structure.")
    fi
done

# YAML file content
read -r -d '' tasks_main_yml_content << 'EOF'
---
# tasks file for roles/apache_vhost
- name: install httpd
  ansible.builtin.package:
    name: httpd
    state: latest

- name: start and enable httpd service
  ansible.builtin.service:
    name: httpd
    state: started
    enabled: true

- name: ensure vhost directory is present
  ansible.builtin.file:
    path: "/var/www/vhosts/{{ ansible_hostname }}"
    state: directory

- name: deliver html content
  ansible.builtin.copy:
    src: web.html
    dest: "/var/www/vhosts/{{ ansible_hostname }}/index.html"

- name: template vhost file
  template:
    src: vhost.conf.j2
    dest: /etc/httpd/conf.d/vhost.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart_httpd
EOF

read -r -d '' handlers_main_yml_content << 'EOF'
---
# handlers file for roles/apache_vhost
- name: restart_httpd
  service:
    name: httpd
    state: restarted
EOF

# Check for the existence and content of the tasks/main.yml file
if [ -f "${apache_vhost_dir}/tasks/main.yml" ]; then
    if compare_yaml "${apache_vhost_dir}/tasks/main.yml" "$tasks_main_yml_content"; then
        echo "${apache_vhost_dir}/tasks/main.yml exists and has the correct content."
    else
        errors+=("${apache_vhost_dir}/tasks/main.yml has incorrect content.")
    fi
else
    errors+=("${apache_vhost_dir}/tasks/main.yml does not exist.")
fi

# Check for the existence and content of the handlers/main.yml file
if [ -f "${apache_vhost_dir}/handlers/main.yml" ]; then
    if compare_yaml "${apache_vhost_dir}/handlers/main.yml" "$handlers_main_yml_content"; then
        echo "${apache_vhost_dir}/handlers/main.yml exists and has the correct content."
    else
        errors+=("${apache_vhost_dir}/handlers/main.yml has incorrect content.")
    fi
else
    errors+=("${apache_vhost_dir}/handlers/main.yml does not exist.")
fi


# Other files check
web_html_file="${apache_vhost_dir}/files/web.html"
vhost_conf_j2_file="${apache_vhost_dir}/templates/vhost.conf.j2"
test_apache_role_file="${ansible_files_dir}/test_apache_role.yml"

read -r -d '' web_html_content << 'EOF'
simple vhost index
EOF

check_file_and_content_with_regex "$web_html_file" "$web_html_content"

read -r -d '' vhost_conf_j2_content << 'EOF'
# {{ ansible_managed }}

<VirtualHost *:8081>
    ServerAdmin webmaster@{{ ansible_fqdn }}
    ServerName {{ ansible_fqdn }}
    ErrorLog logs/{{ ansible_hostname }}-error.log
    CustomLog logs/{{ ansible_hostname }}-common.log common
    DocumentRoot /var/www/vhosts/{{ ansible_hostname }}/

    <Directory /var/www/vhosts/{{ ansible_hostname }}/>
  Options +Indexes +FollowSymlinks +Includes
  Order allow,deny
  Allow from all
    </Directory>
</VirtualHost>
EOF

check_file_and_content_with_regex "$vhost_conf_j2_file" "$vhost_conf_j2_content"

read -r -d '' test_apache_role_content << 'EOF'
---
- name: use apache_vhost role playbook
  hosts: node2
  become: true
  roles:
    - apache_vhost
EOF

# Check if test_apache_role.yml file exists
if [ ! -f "$test_apache_role_file" ]; then
    errors+=("Error: test_apache_role.yml file is missing.")
else
    if compare_yaml "$test_apache_role_file" "$test_apache_role_content"; then
        echo "test_apache_role.yml exists and has the correct content."
    else
        errors+=("Error: test_apache_role.yml file has incorrect content.")
    fi
fi

# If there are any errors, call the fail-message function with all the errors
if [ ${#errors[@]} -gt 0 ]; then
    fail-message "$(IFS=$'\n'; echo "${errors[*]}")"
fi