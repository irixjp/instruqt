#!/bin/bash

# Define the target directory and file
target_directory="/home/rhel/ansible-files"
target_file="${target_directory}/apache.yml"

# Define the remote host and port
remote_host="node1"
remote_port=80

# Define the expected content
read -r -d '' expected_content << 'EOF'
---
- name: Apache server installed
  hosts: node1
  become: true
  tasks:
  - name: latest Apache version installed
    ansible.builtin.package:
      name: httpd
      state: latest
  - name: Apache enabled and running
    ansible.builtin.service:
      name: httpd
      enabled: true
      state: started
EOF

# Compare YAML files using Python
compare_yaml() {
    local yaml_file="$1"
    local content="$2"
    export YAML_FILE="$yaml_file"
    export EXPECTED_YAML="$content"
    python3 -c "import sys, os, yaml; sys.exit(0 if yaml.safe_load(open(os.environ['YAML_FILE'])) == yaml.safe_load(os.environ['EXPECTED_YAML']) else 1)"
    return $?
}

# Check if the 'apache.yml' file exists
if [ -f "$target_file" ]; then
    # Compare the content of the 'apache.yml' file with the expected content
    if compare_yaml "$target_file" "$expected_content"; then
        echo "The 'apache.yml' file has the proper content."

        # Check if the 'httpd' service is running on the remote host using nc command
        if nc -z -w 5 "$remote_host" "$remote_port"; then
            echo "The 'httpd' service is running on the remote host."
        else
            fail-message "The 'httpd' service is NOT running on the remote host."
        fi
    else
        fail-message "The 'apache.yml' file does not have the proper content. Check your indentation!"
    fi
else
    echo "The 'apache.yml' file does not exist in the ansible-files directory"
fi

