#!/bin/bash

# Define the target directories and files
ansible_files_dir="/home/rhel/ansible-files"
roles_dir="${ansible_files_dir}/roles"
apache_vhost_dir="${roles_dir}/apache_vhost"
tasks_dir="${apache_vhost_dir}/tasks"
handlers_dir="${apache_vhost_dir}/handlers"
files_dir="${apache_vhost_dir}/files"
templates_dir="${apache_vhost_dir}/templates"

tasks_main_yml="${tasks_dir}/main.yml"
handlers_main_yml="${handlers_dir}/main.yml"
web_html="${files_dir}/web.html"
vhost_conf_j2="${templates_dir}/vhost.conf.j2"
test_apache_role="${ansible_files_dir}/test_apache_role.yml"

errors=()

# Check if roles directory exists
if [ ! -d "$roles_dir" ]; then
    errors+=("Error: roles directory is missing.")
fi

# Function to check YAML content
check_yml_content() {
    local file_path="$1"
    local expected_content="$2"

    if [ -f "$file_path" ]; then
        local actual_content
        actual_content=$(python3 -c "import yaml; print(yaml.dump(yaml.safe_load(open('$file_path'))))")
        if [ "$actual_content" != "$expected_content" ]; then
            errors+=("Error: $file_path file has incorrect content.")
        fi
    else
        errors+=("Error: $file_path file is missing.")
    fi
}

# Check the content of tasks/main.yml
expected_tasks_main_yml=$(python3 -c 'import yaml; print(yaml.dump(yaml.safe_load("""
---
- name: install httpd
  ansible.builtin.package:
    name: httpd
    state: latest

- name: start and enable httpd service
  ansible.builtin.service:
    name: httpd
    state: started
    enabled: true

- name: ensure vhost directory is present
  ansible.builtin.file:
    path: "/var/www/vhosts/{{ ansible_hostname }}"
    state: directory

- name: deliver html content
  ansible.builtin.copy:
    src: web.html
    dest: "/var/www/vhosts/{{ ansible_hostname }}/index.html"

- name: template vhost file
  template:
    src: vhost.conf.j2
    dest: /etc/httpd/conf.d/vhost.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart_httpd
""")))')

check_yml_content "$tasks_main_yml" "$expected_tasks_main_yml"

# Check the content of handlers/main.yml
expected_handlers_main_yml=$(python3 -c 'import yaml; print(yaml.dump(yaml.safe_load("""
---
# handlers file for roles/apache_vhost
- name: restart_httpd
  service:
    name: httpd
    state: restarted
""")))')

check_yml_content "$handlers_main_yml" "$expected_handlers_main_yml"

# Check the content of web.html
if [ ! -f "$web_html" ]; then
    errors+=("Error: web.html file is missing.")else
    web_html_content=$(cat "$web_html")
    if [ "$web_html_content" != "simple vhost index" ]; then
        errors+=("Error: web.html file has incorrect content.")
    fi
fi

# Check the content of vhost.conf.j2
vhost_conf_j2_content=$(cat <<- EOM
# {{ ansible_managed }}

<VirtualHost *:8081>
    ServerAdmin webmaster@{{ ansible_fqdn }}
    ServerName {{ ansible_fqdn }}
    ErrorLog logs/{{ ansible_hostname }}-error.log
    CustomLog logs/{{ ansible_hostname }}-common.log common
    DocumentRoot /var/www/vhosts/{{ ansible_hostname }}/

    <Directory /var/www/vhosts/{{ ansible_hostname }}/>
        Options +Indexes +FollowSymlinks +Includes
        Order allow,deny
        Allow from all
    </Directory>
</VirtualHost>
EOM
)

if [ ! -f "$vhost_conf_j2" ] || [ "$(cat "$vhost_conf_j2")" != "$vhost_conf_j2_content" ]; then
    errors+=("Error: vhost.conf.j2 file is missing or has incorrect content.")
fi

# Check the content of test_apache_role.yml
expected_test_apache_role=$(python3 -c 'import yaml; print(yaml.dump(yaml.safe_load("""
---
- name: use apache_vhost role playbook
  hosts: node2
  become: true
  roles:
    - apache_vhost
""")))')

check_yml_content "$test_apache_role" "$expected_test_apache_role"

# If there are any errors, call the fail-message function with all the errors
if [ ${#errors[@]} -gt 0 ]; then
    fail-message "$(IFS=$'\n'; echo "${errors[*]}")"
fi

